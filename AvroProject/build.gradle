buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://packages.confluent.io/maven/"
        }
        maven {
            url = uri("https://jitpack.io")
        }
    }
    dependencies {
        classpath "com.github.imflog:kafka-schema-registry-gradle-plugin:1.1.0"
    }

}

plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()

    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "http://packages.confluent.io/maven/"
    }
    maven {
        url = uri("https://jitpack.io")
    }

}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation'io.confluent:kafka-avro-serializer:6.0.0'

}

test {
    useJUnitPlatform()
}

apply plugin: "com.github.imflog.kafka-schema-registry-gradle-plugin"

def pathToSchemas = "${projectDir}/src/main/resources/avro.schemas.v1"

schemaRegistry {
    url = 'http://localhost:8081'
    register {
        subject('com.smartcat.internship.v1.coordinates', "${pathToSchemas}/coordinates.avsc", "AVRO")
        subject('com.smartcat.internship.v1.flightRequest', "${pathToSchemas}/flightRequest.avsc", "AVRO").addReference('com.smartcat.internship.v1.coordinates', 'com.smartcat.internship.v1.coordinates', 2)
        subject('com.smartcat.internship.v1.flightStatus', "${pathToSchemas}/flightStatus.avsc", "AVRO")
        subject('com.smartcat.internship.v1.flightResponse', "${pathToSchemas}/flightResponse.avsc", "AVRO").addReference('com.smartcat.internship.v1.flightStatus', 'com.smartcat.internship.v1.flightStatus', 2)
    }
}

