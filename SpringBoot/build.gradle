buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		maven {
			url "http://packages.confluent.io/maven/"
		}
		maven {
			url = uri("https://jitpack.io")
		}
	}
}
plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.commercehub.gradle.plugin.avro' version '0.21.0'
	id 'com.github.imflog.kafka-schema-registry-gradle-plugin' version '1.1.0'
}
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
group = 'com.smartcat.internship'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'
def relativeAvroSchemasLocation = "/${projectDir}/src/main/avro"
repositories {
	mavenCentral()
	maven {
		url 'http://packages.confluent.io/maven/'
	}
	maven {
		url "https://plugins.gradle.org/m2/"
	}
	maven {
		url = uri("https://jitpack.io")
	}
}
dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile group: 'org.springframework', name: 'spring-context', version: '5.1.6.RELEASE'
	compile('org.apache.kafka:kafka-clients:2.5.0')
	implementation 'io.confluent:kafka-avro-serializer:6.0.0'
	implementation('org.apache.avro:avro:1.10.1')
	testCompile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.21'
}
test {
	useJUnitPlatform()
}
avro {
	fieldVisibility = "PRIVATE"
}
def generateAvro = tasks.register("generateAvro", com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
	source("src/main/avro")
	outputDir = file("src/main/java/")
}
schemaRegistry {
    url = 'http://localhost:8081'
    download {
        // extension of the output file depends on the the schema type
        subject('com.smartcat.internship.v1.coordinates', relativeAvroSchemasLocation)
        subject('com.smartcat.internship.v1.flightRequest', relativeAvroSchemasLocation)
        subject('com.smartcat.internship.v1.flightResponse', relativeAvroSchemasLocation)
        subject('com.smartcat.internship.v1.flightStatus', relativeAvroSchemasLocation)
    }
}